name: 'GH Actions - PR'

on: [ pull_request ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        include:
          - FROM:     'ubuntu:impish'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:hirsute'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'ubuntu:hirsute'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'ubuntu:hirsute'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:hirsute'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:focal'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'ubuntu:focal'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'ubuntu:focal'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:focal'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'gcc'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'linuxmintd/mint20-amd64'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'linuxmintd/mint20-amd64'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'debian:bullseye'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'debian:bullseye'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'debian:buster'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'debian:buster'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'opensuse/leap'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'opensuse/leap'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'fedora:34'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'fedora:34'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'fedora:33'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'fedora:33'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'
          - FROM:     'rockylinux/rockylinux'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'ON'
          - FROM:     'rockylinux/rockylinux'
            COMPILER: 'clang'
            PREFER_LEGACY_OPENGL: 'OFF'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2
        submodules: false

    # Ensure PRs are built against the PR Head
    # As opposed to the merge commit
    - name: Move to PR HEAD
      run: git checkout HEAD^2

    - name: Build and Test
      env:
        FROM:       ${{ matrix.FROM }}
        COMPILER:   ${{ matrix.COMPILER }}
        FLAGS:      '-DVEGA_STRIKE_PREFER_LEGACY_OPENGL=${{ matrix.PREFER_LEGACY_OPENGL }}'
        MY_OS_NAME: linux
        IS_RELEASE: 0
      run: script/cibuild $FLAGS

    # This is run from inside the Docker container, by script/docker-entrypoint.sh
    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   env:
    #     GTEST_OUTPUT: xml
    #     GTEST_COLOR: 1
    #   run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test_results_xml
        path: ${{github.workspace}}/test-results/**/*.xml
